"""Изменение товара

"""

from aiogram.types import Message, CallbackQuery
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram_media_group import media_group_handler

from src import bot, is_admin
from data.methods import insert_into_products
from ..user import show_products


class EditProductStates(StatesGroup):
	info = State()
	price = State()


async def edit_product(message: Message, state=FSMContext):
	if not is_admin(message.from_user.id):
		await bot.send_message(message.from_user.id, "Вы не являетесь администратором, поэтому функция недоступна")
		return
	await bot.send_message(message.from_id, 'Выберите товар')
	product_id = await show_products(message, reply_markup=InlineKeyboardMarkup(one_time_keyboard=True).add(
		InlineKeyboardButton('Изменить', callback_data=f'edit')).add(
		InlineKeyboardButton('Удалить', callback_data=f'delete')))
	await EditProductStates.info.set()
	async with state.proxy() as data:
		data['product_id'] = product_id


async def edit_product_info(callback: CallbackQuery, state=FSMContext):
	if callback.data.startswith('delete'):
		# удалить товар из бд
		pass
	else:
		await bot.send_message(callback.message.from_id, 'Введите новую товара')
		await EditProductStates.next()


@media_group_handler
async def edit_product_media_group(messages: list[Message], state=FSMContext):
	"""В телеграмме фото и видео имеют уникальный file_id,
	который можно отправить и сохранить в базу данных

	"""
	async with state.proxy() as data:
		for message in messages:
			if 'images' not in data.keys() and message.photo:
				data['images'] = [message.photo[-1].file_id]
			elif 'videos' not in data.keys() and message.video:
				data['videos'] = [message.video['file_id']]
			elif 'images' in data.keys() and message.photo:
				data['images'].append(message.photo[-1].file_id)
			elif 'videos' in data.keys() and message.video:
				data['videos'].append(message.video['file_id'])
	await bot.send_message(message.from_id, 'Введите цену товара')
	await EditProductStates.next()


async def edit_product_media(message: Message, state=FSMContext):
	async with state.proxy() as data:
		if message.photo:
			data['images'] = [message.photo[-1].file_id]
		elif message.video:
			data['videos'] = [message.video['file_id']]
	await bot.send_message(message.from_id, 'Введите цену товара')
	await EditProductStates.next()


async def edit_product_price(message: Message, state=FSMContext):
	async with state.proxy() as data:
		data['price'] = int(message.text)
		if 'images' not in data.keys():
			data['images'] = ''
		if 'videos' not in data.keys():
			data['videos'] = ''
	
	name = data['name']
	description = data['description']
	categories = data['categories']
	key = data['key']
	images = ' - '.join(data['images'])
	videos = ' - '.join(data['videos'])
	price = data['price']
	
	await bot.send_message(message.from_id, 'Вы добавили товар успешно!')
	await insert_into_products(key, name, description, categories, images, videos, price)
	await state.finish()


async def edit_product_cancel(message: Message, state=FSMContext):
	if await state.get_state() is None:
		return
	await bot.send_message(message.from_id, 'Изменение товара прекращено')
	await state.finish()
